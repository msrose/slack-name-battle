AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Slack Name Battle! Conduct battles in a parallel universe

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  SlackTokenParameter:
    Type: String
  SlackSigningSecretParameter:
    Type: String

Resources:
  NameBattleTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: slack_id
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: slack_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TimeToLiveSpecification:
        Enabled: true
        AttributeName: timestamp
  NameBattleMetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: slack_id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: slack_id
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  NameBattleFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: name-battle/
      Handler: app.lambdaHandler
      Runtime: nodejs8.10
      Environment:
        Variables:
          SLACK_TOKEN: !Ref SlackTokenParameter
          SLACK_SIGNING_SECRET: !Ref SlackSigningSecretParameter
          NAME_BATTLE_TABLE_NAME: !Ref NameBattleTable
          NAME_BATTLE_METADATA_TABLE_NAME: !Ref NameBattleMetadataTable
      Events:
        NameBattle:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /name-battle
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref NameBattleTable
        - DynamoDBCrudPolicy:
            TableName: !Ref NameBattleMetadataTable

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  NameBattleApi:
    Description: "API Gateway endpoint URL for Prod stage for Name Battle function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/name-battle/"
  NameBattleFunction:
    Description: "Name Battle Lambda Function ARN"
    Value: !GetAtt NameBattleFunction.Arn
  NameBattleFunctionIamRole:
    Description: "Implicit IAM Role created for Name Battle function"
    Value: !GetAtt NameBattleFunctionRole.Arn
  NameBattleTable:
    Description: "DynamoDB table for Name Battles"
    Value: !GetAtt NameBattleTable.Arn
